package com.erictoader.fooddelivery.bll;

import com.erictoader.fooddelivery.model.Order;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

public class ReportGenerator {
    private static Integer tIntervalReports = 0;

    public static void generateTimeIntervalReport(List<Order> selection, String startHour, String endHour, String username) {
        Document doc = new Document();
        try {
            PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream("TimeIntervalReport" + tIntervalReports + ".pdf"));
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy, HH:mm:ss");
            LocalDateTime orderTime = LocalDateTime.now();
            doc.open();

            doc.add(new Paragraph("Time interval report with starting hour: " + startHour + " and end hour: " + endHour));
            doc.add(new Paragraph("Date and Time of report: " + dtf.format(orderTime)));
            doc.add(new Paragraph("Generated by: " + username));
            doc.add(new Paragraph(" "));

            int total = 0;
            for(Order o : selection) {
                doc.add(new Paragraph((total + 1) + ": Order ID: " + o.getOrderID() +
                        ", Client name: " + o.getClientName() +
                        ", Assigned employee: " + o.getAssignedEmployee()));
                doc.add(new Paragraph("Order date: " + o.getOrderDate() +
                        ", Order status: " + o.getStatus()));
                doc.add(new Paragraph(" "));
                total++;
            }
            doc.add(new Paragraph(" "));
            doc.add(new Paragraph("TOTAL: " + total));
            doc.add(new Paragraph(" "));
            doc.add(new Paragraph("Eric Toader - Food Delivery Management System"));
            doc.close();
            writer.close();
            tIntervalReports++;
        } catch (DocumentException | IOException e) {
            e.printStackTrace();
        }
    }
}
